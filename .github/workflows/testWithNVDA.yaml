name: Build and test NVDA add-on

on:
  push:
    branches: [ testAddon ]

  workflow_call:
  
  workflow_dispatch:

jobs:

  addon:

    name: addon

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install scons markdown
        sudo apt update
        sudo apt install gettext
    - name: Build add-on
      run: scons version=${{ github.sha }}
    - name: Upload add-on
      uses: actions/upload-artifact@v4
      with:
        name: nvda-addon
        path: "*.nvda-addon"

        
  test-with-nvda-launcher:
  
    name: Download NVDA launcher and test add-on
  
    needs: addon
  
    runs-on: windows-latest
    
    steps:

    - name: Get last release
      id: get-last-release
      uses: actions/github-script@v6
      with:
        script: |
          const result = await github.request('GET /repos/{owner}/{repo}/releases/latest', {
            owner: 'nvaccess',
            repo: 'nvda'
          })
          return result.data.tag_name
        result-encoding: string


    - name: Cache NVDA
      id: cache-nvda
      uses: actions/cache@v3
      with:
        path: nvda
        key: ${{ runner.os }}-nvda_exe-${{ steps.get-last-release.outputs.result }}
    - name: Download NVDA
      if: steps.cache-nvda.outputs.cache-hit != 'true'
      run: curl --location --output nvda\nvda_launcher.exe https://www.nvaccess.org/download/nvda/releases/${{ steps.get-last-release.outputs.result }}/nvda_${{ steps.get-last-release.outputs.result }}.exe
    # - name: Install NVDA
    #   if: steps.cache-nvda.outputs.cache-hit != 'true'
    #   run: |
    #     .\public\nvda_launcher.exe --create-portable-silent --portable-path nvda -m
    #   shell: cmd
    - name: Download add-on
      uses: actions/download-artifact@v4
      with:
        name: nvda-addon
    - name: Copy add-on
      run: |
        move *.nvda-addon addon.zip
        Expand-Archive addon.zip nvda\userConfig\addons\addon
    - name: Create a configuration file
      run: |
        $config = @'
        [update]
        allowUsageStats = False
        askedAllowUsageStats = True
        autoCheck = False
        [general]
        showWelcomeDialogAtStartup = False
        [speech]
        synth = silence
        '@
        echo $config > nvda\userConfig\nvda.ini
    - name: Check config
      run: |
        type nvda\userConfig\nvda.ini
      shell: cmd
    - name: Start NVDA
      run: |
        cd nvda
        dir
        nvda_launcher.exe -m --debug-logging -f %TEMP%\nvda-with-addon.log -c userConfig
        ping 127.0.0.1 /n 20
      shell: cmd
    - name: Quit NVDA
      run: |
        cd nvda
        nvda_launcher.exe -q
        ping 127.0.0.1 /n 20
      shell: cmd
    - name: get the log file from temp directory
      shell: cmd
      run: |
        ping 192.0.2.0 -n 1 -w 10000 > nul
        copy %TEMP%\nvda-with-addon.log nvda.log
    - name: Upload log
      uses: actions/upload-artifact@v4
      with:
        name: nvda-log
        path: nvda.log
    - name: Remove add-on
      run: Remove-Item nvda\userConfig\addons\addon -Recurse
